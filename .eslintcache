[{"C:\\JS-Projects\\vehicles-app\\src\\index.js":"1","C:\\JS-Projects\\vehicles-app\\src\\App.js":"2","C:\\JS-Projects\\vehicles-app\\src\\reportWebVitals.js":"3","C:\\JS-Projects\\vehicles-app\\src\\AppAuthComponents.js":"4","C:\\JS-Projects\\vehicles-app\\src\\AppUnauthComponents.js":"5"},{"size":455,"mtime":1608583567762,"results":"6","hashOfConfig":"7"},{"size":11557,"mtime":1609365539012,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":11796,"mtime":1609408318356,"results":"10","hashOfConfig":"7"},{"size":3738,"mtime":1609365552250,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1hhe5v2",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\JS-Projects\\vehicles-app\\src\\index.js",[],["24","25"],"C:\\JS-Projects\\vehicles-app\\src\\App.js",["26","27"],"import './App.css';\nimport React from \"react\";\nimport { OptionsBarAuth, LoginBoxAuth, ContentAddVehicles } from \"./AppAuthComponents\";\nimport { OptionsBarUnauth, LoginBoxUnauth } from \"./AppUnauthComponents\";\n\n\nfunction Backdrop(props) {\n  const { visibility, type } = props.backdropProperties;\n\n  function renderBackdropTextbox() {\n    if (type === \"loading\") {\n      return (\n        <div className=\"backdrop-text-container\">\n          <p className=\"loading-indicator\" ></p>\n          <h2 className=\"backdrop-text\">\n            Loading...\n            </h2>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className={`backdrop-background-${visibility}`}>\n      <div className=\"backdrop-textbox\">\n        {renderBackdropTextbox()}\n      </div>\n    </div>\n  );\n}\n\n\nfunction ContentWelcomePage() {\n  return (\n    <div className=\"content-box welcome-page\">\n      <h3>Welcome to Online Vehicle Database!</h3>\n      <p>Dear visitor! You can search for vehicles by fields in the vehicle's registration book. Please log in to add, modify or delete existing vehicles! Signing up is restricted for security reasons. Contact us for more information.</p>\n    </div>\n  );\n}\n\n\nfunction ContentSearchVehicles(props) {\n  const updateResults = props.updateResults;\n\n  const searchParameterOptions = [\"[A] Registration number\", \"[B] Date of first registration\", \"[D.1] Brand\", \"[D.2] Type\", \"[D.3] Model\", \"[P.1] Displacement\",\n    \"[P.5] Engine code\", \"[0] Eurotax code\", \"[P.2] Engine power\", \"[E] Chassis number\", \"[P.3] Fuel type\", \"[J] Vehicle category\", \"[G] Empty Weight\",\n    \"[F.1] Maximum Weight\", \"[K] Type acknowledgement number\", \"[I] Date of first registration in hungary\", \"[00] Year of manufacturing\", \"[R] Color\",\n    \"[V.9] Environmental class\", \"[S.1] Number of seats\", \"[C.1.1] Last name or company name\", \"[C.1.2] First name\", \"[C.1.3] Address\", \"[C.1.4] Ownership type\"];\n\n  const searchMethodsMap = {\n    \"contains\": \"contains\",\n    \"does not contain\": \"ncontains\",\n    \"contains - case sensitive\": \"containss\",\n    \"does not contain - case sensitive\": \"ncontainss\",\n    \"equal\": \"eq\",\n    \"not equal\": \"ne\",\n    \"less than\": \"lt\",\n    \"greater than\": \"gt\",\n    \"less than or equal to\": \"lte\",\n    \"greater than or equal to\": \"gte\",\n    \"included in an array\": \"in\",\n    \"not included in an array\": \"nin\",\n    \"is null or not null\": \"null\"\n  };\n  const searchMethodKeys = Object.keys(searchMethodsMap);\n\n  const [searchErrorUser, setSearchErrorUser] = React.useState(false);\n  const [searchError, setSearchError] = React.useState(false);\n\n  const searchSelectorInput = React.useRef(null);\n  const searchMethodInput = React.useRef(null);\n  const searchValueInput = React.useRef(null);\n\n  function transformStringForQuerying(string) {\n    const splitString = string.split(\"] \")[1].split(\" \");\n    const splitResult = [];\n    splitResult.push(splitString[0].charAt(0).toLowerCase() + splitString[0].slice(1));\n\n    for (let i = 1; i < splitString.length; i++) {\n      splitResult.push(splitString[i].charAt(0).toUpperCase() + splitString[i].slice(1));\n    }\n    return splitResult.join(\"\");\n  }\n\n  async function fetchSearchResults() {\n    const queryField = transformStringForQuerying(searchSelectorInput.current.value);\n    const searchMethod = searchMethodsMap[searchMethodInput.current.value.toLowerCase()];\n    const searchValue = searchValueInput.current.value;\n    let responseStatus = 0;\n\n    const url = `http://borzalom.ddns.net:1000/vehicles?${queryField}_${searchMethod}=${searchValue}`;\n    const options = {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n    };\n\n    if (searchValue.length > 0) {\n      const data = await fetch(url, options)\n        .then(res => {\n          responseStatus = res.status;\n          return res.json();\n        })\n        .catch(err => console.log(err));\n\n      if (responseStatus >= 200 && responseStatus < 300) {\n        updateResults(data);\n        setSearchError(false);\n        setSearchErrorUser(false);\n      } else {\n        setSearchError(true);\n        setSearchErrorUser(false);\n      }\n    } else {\n      setSearchError(false);\n      setSearchErrorUser(true);\n    }\n  }\n\n  function renderSearchOptions(options) {\n    const optionFields = options.map((option) => {\n      return (\n        <option key={`key-${option}`}>{option}</option>\n      );\n    });\n    return optionFields;\n  }\n\n  function renderSearchMethods(methods) {\n    const methodFields = methods.map((method) => {\n      return (\n        <option key={`key-${method.replace(\"\", \"-\")}`}>{(method.charAt(0).toUpperCase() + method.slice(1))}</option>\n      );\n    });\n    return methodFields;\n  }\n\n  return (\n    <div>\n      <div className=\"search-field-box\">\n        <p>Search by: </p>\n        <select ref={searchSelectorInput}>\n          {renderSearchOptions(searchParameterOptions)}\n        </select>\n        <p>Search method: </p>\n        <select ref={searchMethodInput}>\n          {renderSearchMethods(searchMethodKeys)}\n        </select>\n      </div>\n      <div className=\"search-field-box\">\n        <input type=\"text\" size=\"40\" maxLength=\"40\" className=\"input search-field\" id=\"search-field-vehicle\" ref={searchValueInput} />\n        <button className=\"button search\" id=\"search-button-vehicle\" onClick={() => fetchSearchResults()}>SEARCH</button>\n      </div>\n    </div>\n  );\n}\n\n\nfunction ContentDisplaySearchResults(props) {\n  const searchResults = props.searchResults;\n\n  function renderRows() {\n    const row = searchResults.map(vehicle => {\n      return (\n        <tr key={vehicle.id}>\n          <th>{vehicle.registrationNumber}</th>\n          <th>{vehicle.brand}</th>\n          <th>{vehicle.model}</th>\n          <th>{vehicle.dateOfFirstRegistration}</th>\n        </tr>\n      );\n    });\n    return row;\n  }\n\n  function renderTable() {\n    if (searchResults.length !== 0) {\n      return (\n        <div class=\"container\">\n          <div class=\"search-results-box\">\n            <table class=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th>Reg. number</th>\n                  <th>Brand</th>\n                  <th>Model</th>\n                  <th>Date of first reg.</th>\n                </tr>\n              </thead>\n              <tbody>\n                {renderRows()}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      );\n    } else {\n      return <></>;\n    }\n  }\n\n  return (\n    <>\n      {renderTable()}\n    </>\n  );\n}\n\n\nfunction AppAuth(props) {\n  const changeAuth = props.changeAuth;\n\n  const [backdropProperties, setBackdropProperties] = React.useState({ visibility: \"hidden\", type: \"loading\" });\n  const [displayedContent, setDisplayedContent] = React.useState(\"ContentWelcomePage\");\n  const [searchResults, setSearchResults] = React.useState([]);\n\n  function changeBackdrop(backdropData) {\n    const { visibility, type } = { ...backdropData };\n    setBackdropProperties({ visibility: visibility, type: type });\n  }\n\n  function renderContent() {\n    if (displayedContent === \"ContentWelcomePage\") {\n      return <ContentWelcomePage />;\n    } else if (displayedContent === \"ContentSearchVehicles\") {\n      return (\n        <>\n          <ContentSearchVehicles updateResults={data => setSearchResults(data)} />\n          <ContentDisplaySearchResults searchResults={searchResults} />\n        </>\n      );\n    } else if (displayedContent === \"ContentAddVehicles\") {\n      return <ContentAddVehicles />;\n    }\n  }\n\n  return (\n    <>\n      <Backdrop backdropProperties={backdropProperties} />\n      <div className=\".container\">\n        <div className=\"app-main-box\">\n          <div className=\"title-box\">\n            <h1 className=\"main-title\">Online Vehicle Database</h1>\n          </div>\n          <div className=\"main-box\">\n            <div className=\"left-box\">\n              <div className=\"left-content-box\">\n                <h3>Left Box Content 1</h3>\n                <p>placeholder content</p>\n              </div>\n              <div className=\"left-content-box\">\n                <h3>Left Box Content 2</h3>\n                <p>placeholder content</p>\n              </div>\n            </div>\n            <div className=\"center-box\">\n              <OptionsBarAuth changeContent={content => setDisplayedContent(content)} />\n              <div className=\"content-box\">\n                {renderContent()}\n              </div>\n            </div>\n            <div className=\"right-box\">\n              <LoginBoxAuth\n                changeAuth={changeAuth}\n                changeBackdrop={changeBackdrop}\n              />\n              <div className=\"right-content-box\">\n                <h3>Right Box Content 1</h3>\n                <p>placeholder content</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n\nfunction AppUnauth(props) {\n  const changeAuth = props.changeAuth;\n\n  const [backdropProperties, setBackdropProperties] = React.useState({ visibility: \"hidden\", type: \"loading\" });\n  const [displayedContent, setDisplayedContent] = React.useState(\"ContentWelcomePage\");\n  const [searchResults, setSearchResults] = React.useState([]);\n\n  function changeBackdrop(backdropData) {\n    const { visibility, type } = { ...backdropData };\n    setBackdropProperties({ visibility: visibility, type: type });\n  }\n\n  function renderContent() {\n    if (displayedContent === \"ContentWelcomePage\") {\n      return <ContentWelcomePage />;\n    } else if (displayedContent === \"ContentSearchVehicles\") {\n      return (\n        <>\n          <ContentSearchVehicles updateResults={data => setSearchResults(data)} />\n          <ContentDisplaySearchResults searchResults={searchResults} />\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      <Backdrop\n        backdropProperties={backdropProperties}\n      />\n      <div className=\".container\">\n        <div className=\"app-main-box\">\n          <div className=\"title-box\">\n            <h1 className=\"main-title\">Online Vehicle Database</h1>\n          </div>\n          <div className=\"main-box\">\n            <div className=\"left-box\">\n              <div className=\"left-content-box\">\n                <h3>Left Box Content 1</h3>\n                <p>placeholder content</p>\n              </div>\n              <div className=\"left-content-box\">\n                <h3>Left Box Content 2</h3>\n                <p>placeholder content</p>\n              </div>\n            </div>\n            <div className=\"center-box\">\n              <OptionsBarUnauth changeContent={content => setDisplayedContent(content)} />\n              <div className=\"content-box\">\n                {renderContent()}\n              </div>\n            </div>\n            <div className=\"right-box\">\n              <LoginBoxUnauth\n                changeAuth={changeAuth}\n                changeBackdrop={changeBackdrop}\n              />\n              <div className=\"right-content-box\">\n                <h3>Right Box Content 1</h3>\n                <p>placeholder content</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n\nfunction App() {\n  const [authenticated, setAuthenticated] = React.useState(false);\n\n  React.useEffect(() => {\n    if (sessionStorage.getItem(\"res\") !== null) {\n      const userData = JSON.parse(sessionStorage.getItem(\"res\"));\n      if (userData.jwt !== null) {\n        setAuthenticated(true);\n      }\n    }\n  }, []);\n\n  return (authenticated ?\n    <AppAuth changeAuth={bool => setAuthenticated(bool)} /> :\n    <AppUnauth changeAuth={bool => setAuthenticated(bool)} />);\n}\n\n\nexport default App;\n","C:\\JS-Projects\\vehicles-app\\src\\reportWebVitals.js",[],"C:\\JS-Projects\\vehicles-app\\src\\AppAuthComponents.js",["28","29"],"C:\\JS-Projects\\vehicles-app\\src\\AppUnauthComponents.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":68,"column":10,"nodeType":"36","messageId":"37","endLine":68,"endColumn":25},{"ruleId":"34","severity":1,"message":"38","line":69,"column":10,"nodeType":"36","messageId":"37","endLine":69,"endColumn":21},{"ruleId":"34","severity":1,"message":"39","line":11,"column":11,"nodeType":"36","messageId":"37","endLine":11,"endColumn":24},{"ruleId":"34","severity":1,"message":"40","line":121,"column":15,"nodeType":"36","messageId":"37","endLine":121,"endColumn":23},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'searchErrorUser' is assigned a value but never used.","Identifier","unusedVar","'searchError' is assigned a value but never used.","'longFormField' is assigned a value but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]