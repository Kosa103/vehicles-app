[{"C:\\JS-Projects\\vehicles-app\\src\\index.js":"1","C:\\JS-Projects\\vehicles-app\\src\\App.js":"2","C:\\JS-Projects\\vehicles-app\\src\\reportWebVitals.js":"3","C:\\JS-Projects\\vehicles-app\\src\\AppAuthComponents.js":"4","C:\\JS-Projects\\vehicles-app\\src\\AppUnauthComponents.js":"5"},{"size":455,"mtime":1608583567762,"results":"6","hashOfConfig":"7"},{"size":12306,"mtime":1609432606535,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":11796,"mtime":1609408318356,"results":"10","hashOfConfig":"7"},{"size":3747,"mtime":1609423587672,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1hhe5v2",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\JS-Projects\\vehicles-app\\src\\index.js",[],["24","25"],"C:\\JS-Projects\\vehicles-app\\src\\App.js",[],"C:\\JS-Projects\\vehicles-app\\src\\reportWebVitals.js",[],"C:\\JS-Projects\\vehicles-app\\src\\AppAuthComponents.js",["26","27"],"import React from \"react\";\r\n\r\n\r\nexport function ContentAddVehicles() {\r\n    const defaultFormField = {\r\n        type: \"text\",\r\n        size: \"30\",\r\n        maxLength: \"30\",\r\n        className: \"input input-text form-field\"\r\n    };\r\n    const longFormField = {\r\n        type: \"text\",\r\n        size: \"120\",\r\n        maxLength: \"120\",\r\n        className: \"input input-long-text form-field\"\r\n    };\r\n    const dateFormField = {\r\n        type: \"date\",\r\n        size: \"10\",\r\n        maxLength: \"10\",\r\n        className: \"input input-date form-field\"\r\n    };\r\n    const numberFormField = {\r\n        type: \"number\",\r\n        size: \"30\",\r\n        maxLength: \"30\",\r\n        className: \"input input-number form-field\"\r\n    };\r\n    const commentsFormField = {\r\n        type: \"text\",\r\n        size: \"100000\",\r\n        maxLength: \"100000\",\r\n        className: \"input input-comments form-field\"\r\n    };\r\n    const form = {\r\n        registrationNumber: React.useRef(null),\r\n        dateOfFirstRegistration: React.useRef(null),\r\n        brand: React.useRef(null),\r\n        type: React.useRef(null),\r\n        model: React.useRef(null),\r\n        displacement: React.useRef(null),\r\n        engineCode: React.useRef(null),\r\n        eurotaxCode: React.useRef(null),\r\n        enginePower: React.useRef(null),\r\n        chassisNumber: React.useRef(null),\r\n        fuelType: React.useRef(null),\r\n        vehicleCategory: React.useRef(null),\r\n        emptyWeight: React.useRef(null),\r\n        maximumWeight: React.useRef(null),\r\n        typeAcknowledgementNumber: React.useRef(null),\r\n        dateOfFirstRegistrationInHungary: React.useRef(null),\r\n        yearOfManufacturing: React.useRef(null),\r\n        color: React.useRef(null),\r\n        environmentalClass: React.useRef(null),\r\n        numberOfSeats: React.useRef(null),\r\n        lastNameOrCompanyName: React.useRef(null),\r\n        firstName: React.useRef(null),\r\n        address: React.useRef(null),\r\n        ownershipType: React.useRef(null),\r\n        examValidUntil: React.useRef(null),\r\n        comments: React.useRef(null),\r\n    };\r\n    const postAlert = React.useRef(null);\r\n\r\n    function sanitizeInput(input) {\r\n        const stringInput = input.toString();\r\n        return stringInput.replace(\"(\", \"\").replace(\")\", \"\").replace(\"{\", \"\").replace(\"}\", \"\").replace(\"*\", \"\").replace(\";\", \"\").replace(\"%\", \"\").toUpperCase();\r\n    }\r\n\r\n    function removeDash(input) {\r\n        return input.replace(\"-\", \"\");\r\n    }\r\n\r\n    async function attemptPostForm() {\r\n        const values = {\r\n            registrationNumber: sanitizeInput(removeDash(form.registrationNumber.current.value)),\r\n            dateOfFirstRegistration: sanitizeInput(form.dateOfFirstRegistration.current.value),\r\n            brand: sanitizeInput(form.brand.current.value),\r\n            type: sanitizeInput(form.type.current.value),\r\n            model: sanitizeInput(form.model.current.value),\r\n            displacement: sanitizeInput(form.displacement.current.value),\r\n            engineCode: sanitizeInput(form.engineCode.current.value),\r\n            eurotaxCode: sanitizeInput(form.eurotaxCode.current.value),\r\n            enginePower: sanitizeInput(form.enginePower.current.value),\r\n            chassisNumber: sanitizeInput(form.chassisNumber.current.value),\r\n            fuelType: sanitizeInput(form.fuelType.current.value),\r\n            vehicleCategory: sanitizeInput(form.vehicleCategory.current.value),\r\n            emptyWeight: sanitizeInput(form.emptyWeight.current.value),\r\n            maximumWeight: sanitizeInput(form.maximumWeight.current.value),\r\n            typeAcknowledgementNumber: sanitizeInput(form.typeAcknowledgementNumber.current.value),\r\n            dateOfFirstRegistrationInHungary: sanitizeInput(form.dateOfFirstRegistrationInHungary.current.value),\r\n            yearOfManufacturing: sanitizeInput(form.yearOfManufacturing.current.value),\r\n            color: sanitizeInput(form.color.current.value),\r\n            environmentalClass: sanitizeInput(form.environmentalClass.current.value),\r\n            numberOfSeats: sanitizeInput(form.numberOfSeats.current.value),\r\n            lastNameOrCompanyName: sanitizeInput(form.lastNameOrCompanyName.current.value),\r\n            firstName: sanitizeInput(form.firstName.current.value),\r\n            address: sanitizeInput(form.address.current.value),\r\n            ownershipType: sanitizeInput(form.ownershipType.current.value),\r\n            examValidUntil: sanitizeInput(form.examValidUntil.current.value),\r\n            comments: sanitizeInput(form.comments.current.value),\r\n        };\r\n        const requestBody = {};\r\n        for (const [key, value] of Object.entries(values)) {\r\n            if (value) {\r\n                requestBody[key] = value;\r\n            }\r\n        }\r\n        const token = JSON.parse(sessionStorage.getItem(\"res\")).jwt;\r\n        const url = \"http://borzalom.ddns.net:1000/vehicles\";\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        };\r\n        let responseStatus = 0;\r\n\r\n        const response = await fetch(url, options)\r\n        .then(res => {\r\n            responseStatus = res.status;\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n        if (responseStatus >= 200 && responseStatus < 300) {\r\n            postAlert.current.textContent = \"Successfully added vehicle\";\r\n        } else {\r\n            postAlert.current.textContent = \"Error adding vehicle!\"\r\n            console.log(\"Error code:\");\r\n            console.log(responseStatus);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"content-box form-box\">\r\n            <h2>Add new vehicle:</h2>\r\n            <p>Fields marked with an asterisk (*) are mandatory to fill!</p>\r\n            <p ref={postAlert}></p>\r\n            <div className=\"form-page\">\r\n                <div className=\"form-subpage\">\r\n                    <FormField title=\"[A] Registration number*:\" properties={defaultFormField} reference={form.registrationNumber}/>\r\n                    <FormField title=\"[B] Date of first registration*:\" properties={dateFormField} reference={form.dateOfFirstRegistration}/>\r\n                    <FormField title=\"[D.1] Brand*:\" properties={defaultFormField} reference={form.brand}/>\r\n                    <FormField title=\"[D.2] Type:\" properties={defaultFormField} reference={form.type}/>\r\n                    <FormField title=\"[D.3] Model*:\" properties={defaultFormField} reference={form.model}/>\r\n                    <FormField title=\"[P.1] Displacement*:\" properties={numberFormField} reference={form.displacement}/>\r\n                    <FormField title=\"[P.5] Engine code*:\" properties={defaultFormField} reference={form.engineCode}/>\r\n                </div>\r\n                <div className=\"form-subpage\">\r\n                    <FormField title=\"[0] Eurotax code:\" properties={defaultFormField} reference={form.eurotaxCode}/>\r\n                    <FormField title=\"[P.2] Engine power*:\" properties={numberFormField} reference={form.enginePower}/>\r\n                    <FormField title=\"[E] Chassis number*:\" properties={defaultFormField} reference={form.chassisNumber}/>\r\n                    <FormField title=\"[P.3] Fuel type*:\" properties={defaultFormField} reference={form.fuelType}/>\r\n                    <FormField title=\"[J] Vehicle category*:\" properties={defaultFormField} reference={form.vehicleCategory}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-page\">\r\n                <div className=\"form-subpage\">\r\n                    <FormField title=\"[G] Empty Weight:\" properties={numberFormField} reference={form.emptyWeight}/>\r\n                    <FormField title=\"[F.1] Maximum Weight:\" properties={numberFormField} reference={form.maximumWeight}/>\r\n                    <FormField title=\"[K] Type acknowledgement number:\" properties={defaultFormField} reference={form.typeAcknowledgementNumber}/>\r\n                    <FormField title=\"[I] Date of first registration in hungary:\" properties={dateFormField} reference={form.dateOfFirstRegistrationInHungary}/>\r\n                    <FormField title=\"[00] Year of manufacturing:\" properties={numberFormField} reference={form.yearOfManufacturing}/>\r\n                </div>\r\n                <div className=\"form-subpage\">\r\n                    <FormField title=\"[R] Color:\" properties={defaultFormField} reference={form.color}/>\r\n                    <FormField title=\"[V.9] Environmental class:\" properties={defaultFormField} reference={form.environmentalClass}/>\r\n                    <FormField title=\"[S.1] Number of seats:\" properties={numberFormField} reference={form.numberOfSeats}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-page\">\r\n                <div className=\"form-subpage\">\r\n                    <FormField title=\"[C.1.1] Last name or company name:\" properties={defaultFormField} reference={form.lastNameOrCompanyName}/>\r\n                    <FormField title=\"[C.1.2] First name:\" properties={defaultFormField} reference={form.firstName}/>\r\n                    <FormField title=\"[C.1.3] Address:\" properties={defaultFormField} reference={form.address}/>\r\n                    <FormField title=\"[C.1.4] Ownership type:\" properties={defaultFormField} reference={form.ownershipType}/>\r\n                    <FormField title=\"[000] Exam valid until:\" properties={dateFormField} reference={form.examValidUntil}/>\r\n                </div>\r\n                <div className=\"form-subpage\">\r\n                    <FormField title=\"[0000] Comments:\" properties={commentsFormField} reference={form.comments}/>\r\n                </div>\r\n            </div>\r\n            <button className=\"button form-submit-button\" onClick={() => attemptPostForm()}>Add vehicle</button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction FormField(props) {\r\n    const title = props.title;\r\n    const {type, size, maxLength, className} = {...props.properties};\r\n    const reference = props.reference;\r\n\r\n    const id = title.split(\"] \")[1].toLowerCase().replace(\" \", \"-\").replace(\":\", \"\").replace(\"*\", \"\");\r\n\r\n    return (\r\n        <div className=\"form-field\">\r\n            <p>{title}</p>\r\n            <input type={type} size={size} maxLength={maxLength} className={className} id={`input-${id}`} ref={reference}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function OptionsBarAuth(props) {\r\n    const changeContent = props.changeContent;\r\n\r\n    return (\r\n        <div className=\"options-bar-box\">\r\n            <button className=\"button options-button\" onClick={() => changeContent(\"ContentSearchVehicles\")}>Search Vehicles</button>\r\n            <button className=\"button options-button inactive\" onClick={() => changeContent(\"ContentAddVehicles\")}>Add Vehicles</button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function LoginBoxAuth(props) {\r\n    const changeAuth = props.changeAuth;\r\n\r\n    function attemptLogout() {\r\n        sessionStorage.removeItem(\"res\");\r\n        changeAuth(false);\r\n    }\r\n\r\n    function renderLoginBox() {\r\n        const userData = sessionStorage.getItem(\"res\");\r\n        let userName = \"\";\r\n\r\n        if (userData !== null) {\r\n            userName = JSON.parse(userData).user.username;\r\n        }\r\n        return (\r\n            <>\r\n                <p>Logged in as:</p>\r\n                <p>{userName}</p>\r\n                <button\r\n                    className=\"button logout-button\"\r\n                    id=\"logout-button\"\r\n                    onClick={() => attemptLogout()}>\r\n                    Logout\r\n          </button>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-box\">\r\n            {renderLoginBox()}\r\n        </div>\r\n    );\r\n}\r\n\r\n","C:\\JS-Projects\\vehicles-app\\src\\AppUnauthComponents.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":11,"column":11,"nodeType":"34","messageId":"35","endLine":11,"endColumn":24},{"ruleId":"32","severity":1,"message":"36","line":121,"column":15,"nodeType":"34","messageId":"35","endLine":121,"endColumn":23},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'longFormField' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]